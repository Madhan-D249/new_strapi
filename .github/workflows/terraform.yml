name: CD - Terraform Deploy to EC2

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker Image Tag (e.g. Git SHA)'
        required: true

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply and Get IP
        id: terraform
        working-directory: ./terraform
        run: |
          terraform apply -var-file="envs/dev.tfvars" -auto-approve
          echo "EC2_IP=$(terraform output -raw strapi_public_ip)" >> $GITHUB_ENV


      - name: Wait for EC2 to become ready
        run: |
          echo "Waiting for EC2 to boot up..."
          sleep 60  # Adjust time based on instance boot speed

      - name: Deploy Docker Image to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Setup environment variables
            echo "${{ secrets.ENV_FILE }}" > .env

            # Stop and remove existing container if any
            sudo docker stop strapi || true
            sudo docker rm strapi || true

            # Pull latest image and run
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/strapi-backend:${{ github.event.inputs.image_tag }}
            sudo docker run -d --name strapi --env-file .env -p 80:1337 ${{ secrets.DOCKER_USERNAME }}/strapi-backend:${{ github.event.inputs.image_tag }}

            echo "âœ… Strapi container deployed on EC2!"
